def render(volume, x, y):
	step = 2
	line_iter = orthogonal_iter(volume, x, y, step)
	
	color = make_float4(0)
	tmp_val = make_float4(0)
	for elem in line_iter:
		val = linear_query_3d(volume, elem)
		tmp_val = transfer(val)
		color = alpha_compositing(color, tmp_val)

		if color.w > 253: break
	
	color = background_white(color)
	return RGB(color)


def main():
	fp = open(DATA_PATH+"/stagbeetle832x832x494.dat")
	import numpy
	vuSize = numpy.fromstring(fp.read(3*2), numpy.uint16)
	uCount = int(vuSize[0])*int(vuSize[1])*int(vuSize[2])
	
	volume = fp.read(uCount*2)
	volume = numpy.fromstring(volume, numpy.uint16)
	volume = numpy.reshape(volume, (vuSize[2], vuSize[1], vuSize[0]))
	
	fp.close()

	enable_viewer(render(volume,x,y).range(x=-512:512,y=-512:512).split(output,y=2),'TFF2', '3D', 4096)


def pq2(image, x, y):
	return point_query_2d(image, x, y)

def lq2(image, x, y):
	return linear_query_2d(image, x+0.5, y+0.5)

def main():
	import numpy
	image = numpy.ones((11,11), dtype=numpy.float32)

	# image is 
	# x + y, 11x11, 2D matrix
	# but 11 boundary is one
	for i in range(10):
		for j in range(10):
			image[i][j] = i+j

	# point query 2d
	result = pq2(image, x, y).range(x=0:10,y=0:10).dtype(image, float)

	# correct is 
	# x + y, 10x10, 2D matrx
	correct = image[0:10,0:10]

	if (correct == result).all():
		print "Ok"
	else:
		print "Fail"
		print "Correct"
		print correct
		print "Result"
		print result

	# Linear query 2d
	result = lq2(image, x, y).range(x=0:10,y=0:10).dtype(image, float)

	# linear query 2d CPU implementation
	correct = numpy.zeros((10,10), dtype=numpy.float32)
	for x in range(10):
		for y in range(10):
			a = image[x][y]
			b = image[x][y+1]
			c = image[x+1][y]
			d = image[x+1][y+1]

			ac = (a+c)/2
			bd = (b+d)/2

			abcd = (ac+bd)/2

			correct[x][y] = abcd

	if (correct == result).all():
		print "Ok"
	else:
		print "Fail"
		print "Correct"
		print correct
		print "Result"
		print result



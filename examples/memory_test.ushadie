###########################################################################################
def function1(volume, x, y, z):
	val = point_query_3d(volume, x,y,z)
	return val
###########################################################################################

import numpy
def main():           
#	print volume1
	# TEST1 simple
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat')
#	volume2 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=uchar)
#										 .modifier(volume2, size=volume1, dtype=float)
#	volume2 = SHADIE_GATHER(volume2)
#	print volume2
#	volume2 = None
#	volume1 = None	

	# TEST2 for
	# volume1 will not be used, we don't need execute function1
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)
#	for i in range(10):
#		volume1 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float)
#	volume1 = None

	# TEST3 split_small
	# in&out
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)
#	volume1 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float, split=(2,1,1))
#	volume1 = None
#
	# TEST4 split with gather
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)#
#	volume2 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float, split=(2,1,1))
#										 .modifier(volume2, size=volume1, dtype=float, split=(2,1,1))

#	volume3 = SHADIE_GATHER(volume2)
#	print volume3
#	volume2 = None


	# TEST5 split with gather
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)
#	volume2 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float, split=(12,1,1))
#										 .modifier(volume2, size=volume1, dtype=float, split=(12,1,1))

#	volume3 = SHADIE_GATHER(volume2)
#	print volume3
#	volume2 = None

	# TEST6 split and out_of_core
#	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)
#	volume2 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float, split=(2,1,1))
#										 .modifier(volume2, size=volume1, dtype=float, split=(2,1,1))
#	save_data(volume2, 'result.raw', out_of_core=True)
#	volume1 = None

	# TEST7 12 split and out_of_core
	volume1 = load_data_3d(DATA_PATH+'em_small.dat', float, out_of_core=True)
	volume2 = function1(volume1, x, y, z).modifier(volume1, size=volume1, dtype=float, split=(12,1,1))
										 .modifier(volume2, size=volume1, dtype=float, split=(12,1,1))
	save_data(volume2, 'result.raw', out_of_core=True)
	volume1 = None
	time.sleep(1)



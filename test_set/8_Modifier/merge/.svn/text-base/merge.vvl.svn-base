def function(data, x, y):
	left = point_query_2d(data, x-1, y)
	right = point_query_2d(data, x+1, y)
	val = left and right
	return val

def multi(front, back, x, y):
	f = point_query_2d(front, x, y)
	b = point_query_2d(back, x, y)
	return f + b

def main():
	import numpy as np
	data = np.ones((10,10), dtype=numpy.float32)

	result = function(data, x, y).range(x=0:10,y=0:10)
								 .dtype(data,float)
								 .split(data, x=2)
								 .merge(multi, 'front-to-back')

	correct = np.ones((10,10), dtype=numpy.float32)
	correct[0] = 0
	correct[4] = 0
	correct[5] = 0
	correct[-1] = 0

	correct = correct.transpose()

	if (correct == result).all():
		print "Ok"
	else:
		print "Fail"
		print "Correct"
		print correct
		print "Result"
		print result

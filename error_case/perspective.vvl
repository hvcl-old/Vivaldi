def line_iter_test(data, x, y, n):
	iter = perspective_iter(data, x, y, 0.2, n/2)

	max = 0.0
	for elem in iter:
		val = point_query_3d(data, elem)
		if max < val: 
			max = val
	return max

def main():
	import numpy
	numpy.set_printoptions(linewidth=300, precision=2)
	n = 5
	data = numpy.ones((n,n,n), dtype=numpy.float32)

	for i in range(n):
		data[i] = i + 1

	Translate(0,0,n/2)
	Translate(-(n-1)/2,-(n-1)/2,0)
	result = line_iter_test(data, x, y, n).range(x=-(n-1)/2:(n+1)/2, y=-(n-1)/2:(n+1)/2)
	
	print result

#	correct = numpy.ones((5,5))*10

#	if (result == correct).all():
		# correct answer is 10, because distance between from start to end is 10
#		print "Ok"
#	else:
#		print "Fail"
#		print "Correct"
#		print correct
#		print "Result"
#		print result
